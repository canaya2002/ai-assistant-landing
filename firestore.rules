rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ========================================
    // üîê FUNCIONES HELPER DE SEGURIDAD
    // ========================================
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isEmailVerified() {
      return request.auth.token.email_verified == true;
    }

    // ========================================
    // üí¨ CONVERSACIONES (SIMPLIFICADO)
    // ========================================
    match /conversations/{conversationId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // ========================================
    // üë§ USUARIOS
    // ========================================
    match /users/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if isAuthenticated() && request.auth.uid == userId;
    }

    // ========================================
    // üë§ PREFERENCIAS DE USUARIO
    // ========================================
    match /user_preferences/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow create, update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if isAuthenticated() && request.auth.uid == userId;
    }

    // ========================================
    // üìä USAGE
    // ========================================
    match /usage/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow write: if false;
    }

    // ========================================
    // üñºÔ∏è IMAGES
    // ========================================
    match /images/{imageId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // ========================================
    // üé• VIDEOS
    // ========================================
    match /videos/{videoId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // ========================================
    // üåê SEARCH USAGE
    // ========================================
    match /search_usage/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow write: if false;
    }

    // ========================================
    // üí≥ PAYMENTS
    // ========================================
    match /payments/{paymentId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow write: if false;
    }

    // ========================================
    // üîî NOTIFICATIONS
    // ========================================
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // ========================================
    // üö® SECURITY LOGS
    // ========================================
    match /security_logs/{logId} {
      allow read, write: if false;
    }

    // ========================================
    // üö´ DENEGAR TODO LO DEM√ÅS
    // ========================================
    match /{document=**} {
      allow read, write: if false;
    }
  }
}